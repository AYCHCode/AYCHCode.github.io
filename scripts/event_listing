<?php

/*
 This code is used to pregenerate the events listing displayed
 on the PHP.net (and all mirror's) homepage. It gets the filename
 of the CSV where the info is already fetched, and generates the
 PHP code ready to be included to $outfile 
*/

function pregenerate_events($csvfile, $outfile)
{
    // Try to open output file for reading
    $out = @fopen("$outfile~", "w");
    if (!$out) { die("unable to pregenerate events list to '$outfile~'"); }

    // Read in events CSV file
    $csv = @fopen($csvfile, "r");
    if (!$csv) { die("unable to open $csvfile for reading"); }

    // Current month number, current category and categories list
    $cm = $ccat = 0;
    $cats = array('unknown', 'User Group Events', 'Conferences', 'Training');

    // Event duplication check hash
    $seen = array();

    // Start output file with PHP code
    fwrite(
        $out,
        "<?php\n\$RSIDEBAR_DATA = <<<END_RSIDEBAR_DATA\n" .
        "<h3>Upcoming Events <a href=\"/submit-event.php\">[add]</a></h3>\n"
    );
    
    $content = ""; $buffer = array();
    // While we can read the events file
    while (TRUE) {

        // Get information event elements from file
        $elems = fgetcsv($csv, 8192);
        if ($elems === FALSE) { break; }
        list($d, $m, $y, $ccode, $desc, $id, , , , , , , $cat) = $elems;

        // Fgetcvs() returns an array with a single null element
        // for a blank line, which we need to skip
        if ($d === NULL) { continue; }

        // If the month number changed
        if ($cm != (int) $m) {

            // Update current month information
            $cm = (int) $m;

            // Start month with a header
            fwrite($out, '<h4 class="eventmonth">' .
                         strftime('%B', mktime(12, 0, 0, $cm, $d, $y)) .
                         "</h4>\n"
            );

            // We have not seen any events in this month
            $seen = array();
            
            // New category header needed
            $ccat = 0;
        }

        // Start new category with a category header
        if ($ccat != (int) $cat) {
            if($ccat) {
                // "buffer" the current content before we move onto next category
                $buffer[$ccat] = $content;
            }

            $content = '<h4>' . $cats[$cat] . "</h4>\n";
            $ccat = $cat;
        }
        
        // There is no event with this description in this month already seen
        if (!isset($seen[$desc])) {
            
            // Add event to the "buffer"
            $content .= "<span class=\"event_$ccode\">$d. <a href=\"/cal.php?id=$id\">" .
                         htmlspecialchars(stripslashes($desc)) .
                         "</a></span><br />\n";
            
            // Set seen flag
            $seen[$desc] = TRUE;
        }
    }
    // Add the last category to the "buffer"
    $buffer[$ccat] = $content;

    // Organize the output
    if ($buffer[2]) { // Conferences
        fwrite($out, $buffer[2]);
    }
    if ($buffer[1]) { // User Group Events
        fwrite($out, $buffer[1]);
    }
    if ($buffer[3]) { // Training
        fwrite($out, $buffer[3]);
    }
    if ($buffer[0]) { // Unkown
        fwrite($out, $buffer[0]);
    }

    // End heredoc string
    fwrite($out, "END_RSIDEBAR_DATA;\n");

    // Close files (all events displayed)
    fclose($csv); fclose($out);
    
    // If we don't have new data, delete file
    if (!@filesize("$outfile~")) {
        echo "'$outfile~' was empty, skipping\n";
        unlink("$outfile~");
        return;
    }
  
    // Replace real file with temporary file
    return rename("$outfile~", $outfile);    
}
?>
