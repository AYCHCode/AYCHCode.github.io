#!/usr/local/bin/php -q
<?php
/*
 This script alerts the php-mirrors team about dead mirrors,
 as well as tries to mail notifications of deactivations
 to the individual mirror maintainers (using the provided
 contact details).
*/

// Please edit this when testing to print the mail out, not send them to the list every time
define("DEBUG", true);

function email($address, $subject, $content) {
	if (DEBUG) {
		echo $subject, "\n", $content, "\n\n\n\n";
		return;
	}

	$headers = "From: network-status@lists.php.net";
	$extrah  = "-fnoreply@php.net";
	return mail($address, $subject, $content, $headers, $extrah);
}
// This script will run for a long time
set_time_limit (0);

// Empty arrays by default
$inactives = $disabled = $lines = array();
 
// Try to connect to the database and select phpmasterdb database
mysql_connect("localhost","nobody","") or die("unable to connect to database");
mysql_select_db("phpmasterdb");

// Select last mirror check time from table
$lct = mysql_query("SELECT UNIX_TIMESTAMP(lastchecked) FROM mirrors ORDER BY lastchecked DESC LIMIT 1");
list($checktime) = mysql_fetch_row($lct);

// Select all mirrors ordered by hostname
$query = "SELECT maintainer, active, hostname, id, has_search, UNIX_TIMESTAMP(lastupdated) AS lastupdate, " .
         "phpversion, acmt, ocmt " .
         "FROM mirrors WHERE mirrortype = 1 ORDER BY hostname";

// Execute SQL query
$result = mysql_query($query) or die("unable to get from the database");

while ($host = mysql_fetch_assoc($result)) {

	if (!$host["active"] || $host["ocmt"]) {
		$error = "";
		if (!$host["active"]) {
			$disabled[$host["hostname"]] = $host;
			$error .= $host["acmt"];
		}
		if ($host["ocmt"]) {
			$inactives[$host["hostname"]] = $host;
			$error .= $host["ocmt"];
		}

		$message = "Hi!\n\nOur automatic mirror site check found a permanent "
			."fatal error in your mirror setup.\n"
			."Therefore our bot automatically disabled your listing as an\n"
			."official PHP.net mirror site.\n"
			."\n$error\n"
			."Please correct the problem or reply to this mail with your\n"
			."questions, if you think that the problem is not on your side.\n"
			."Your mirror will be kept disabled until the error is fixed.\n\n"
			."Mail sent out by the PHP.net automatic mirror site monitoring system";

		email(
			$host["maintainer"],
			"{$host["hostname"]} mirror site deactivated",
			$message
		);
	} else {
		$has_search = empty($host['has_search']) ? 'N' : 'Y';

		$lines[]= sprintf(" %s%s%s%s%s%s%s\n", 
                      $host['hostname'],   pad(12,  'hostname'), 
                      $host['phpversion'], pad(6, 'phpversion'), 
                      $has_search,              pad(1, 'has_search'), 
                      date('F j, Y, g:i a', $host['lastupdate'])
                 );
	}
}

// This is the common text for the php-mirrors mail
$body = "Following is data gathered from the various mirrors. It is ordered by those\n"
      . "that are suspected to be dead, mirrors which are alive but have errors, and\n"
      . "finally the rest, sorted by hostname. The maintainers of inactive and disabled\n"
      . "mirror sites are automatically notified the same time, as this mail goes out.\n\n"
      . "View the mirror trouble guide here: http://php.net/mirroring-troubles.php\n\n";

if (count($inactives)) {
	$body .= "These mirrors are badly broken:\n\n";
	$body .= wordwrap(join(', ', array_keys($inactives))) . "\n";
}

if (count($disabled)) {
	$body .= "\nThese mirrors are manually disabled:\n\n";
	$body .= wordwrap(join(', ', array_keys($disabled))) . "\n";
}

$body .= "\nAnd now for the rest of the mirrors:\n"
       . "----------------------------------------------------------------------------------------\n"
       . " Host \t\t PHP Version \t\t SQLite \t\t Last Updated\n"
       . "----------------------------------------------------------------------------------------\n";

/* A note about the padding - given that email readers produce interesting results for spacing,
i've gone for tabs here to help seperate the text columns. to make sure i don't over tab, i do 
a quick strlen check, and depending on how different it is from the string length i give as avg
(first argument), will determine how many tabs i use, or alternatively a space. */

// Padd an item, respecting a default length
function pad($deflen, $item) {
    global $host;
    $str = strlen($host[$item]);
    if ($str >= $deflen*2) {
        $sp =" ";
    }
    else if ($str <= $deflen){
        $sp ="\t\t";
    } else {
        $sp = "\t";
    }
    return $sp;    
}


$body .= join("", $lines);
$body . "---------------------------------------------------------------------------------------\n";

email(
	"network-status@lists.php.net",
	"[mirrors] Status information",
	$body
);


